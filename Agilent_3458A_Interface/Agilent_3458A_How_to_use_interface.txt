# ==> means comment  
# Without # ==> means command in terminal  
# If the interface is used on Ubuntu 24.04, run the following command in the terminal before using the interface (or if there is an error about "No route to Host/Device").

sudo ip addr add 172.17.2.100/24 dev eth0

# Before the interface is initialized, the measurement device should be connected with a LAN cable and powered on!

# The LAN connection can be checked by entering the following command in the terminal:  
ping 172.17.2.21  

# The terminal must be opened in the directory containing the Python file.  

# Then, to start the interface, enter the following command in the terminal:  
sudo python3 Agilent_3458A_interface_telnet.py  

# If a fixed number of readings is required, use the second Python file,  
# as the code is configured to handle a specific number of readings:  
sudo python3 Agilent_3458A_interface_telnet2.py  

# This will automatically start the interface.  
# Initially, the device identity is queried, the status is cleared, and the instrument is reset.  
# The user is then asked whether a calibration should be performed.  
# If yes, a type of calibration must be selected.  
# The total calibration time is approximately 16 minutes:  
# DC takes about 3 minutes, AC takes about 3 minutes, and OHM takes about 12 minutes.  

# After calibration is completed, the connection between the measurement device and the Raspberry Pi is lost.  
# Therefore, the interface should be exited, and the LAN cable should be unplugged and plugged back in.  
# Then, restart the interface by entering the following command:  
sudo python3 interface_telnet.py  

# When asked about calibration, respond with "no" to proceed to measurements.  
# Measurements can then be started by entering one of the commands, such as: dc, ac, curr_dc, etc.  
# These commands are listed after the Python file is initialized.  

# Measurements can be stopped at any time by typing the command:  
stop  

# The user will then be asked whether to save the measurement.  
# If the answer is yes, the filename and format must be entered (e.g.):  
ac_voltage.txt  

# The measurement is saved with respect to UTC time and the selected measurement type.  
# For example:  
Time,AC Voltage  
2024-08-16 13:37:00 - +1.02527093E-02  
2024-08-16 13:37:01 - +1.70704649E-05  
2024-08-16 13:37:03 - +4.17994131E-06  
2024-08-16 13:37:04 - +5.21056405E-06  
2024-08-16 13:37:05 - +5.03549386E-06  

# If the answer is no, the measurement will not be saved.  

# The interface can be exited by typing:  
exit  

#If you want to perform a specific number of measurements (e.g., 10), 
# you can use interface_telnet2.py. This interface functions similarly to the original version, 
# but it allows the user to define the number of measurements in advance and then executes the measurements accordingly.